name: tests

on:
  push:
    branches: [ master, python3 ]
  pull_request:
  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        plone-version:
          # - '5.2'
          - '6.0'
        python-version:
          # - '2.7'
          # - '3.7'
          # - '3.8'
          - '3.9'
        # exclude:
          # - plone-version: '5.2'
          #   python-version: '3.9'
          # - plone-version: '6.0'
          #   python-version: '2.7'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get install -y libxml2-dev libxslt-dev python-dev xvfb
          pip install virtualenv wheel
      - uses: nanasess/setup-chromedriver@master
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/buildout-cache
            ~/extends
            ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.plone-version }}-${{ hashFiles('**/*.cfg') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.plone-version }}-
            ${{ runner.os }}-${{ matrix.python-version }}-
            ${{ runner.os }}-
      - name: setup buildout cache
        run: |
            mkdir -p ~/buildout-cache/{eggs,downloads}
            mkdir ~/.buildout
            echo "[buildout]" > $HOME/.buildout/default.cfg
            echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg
            echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg
      - name: bootstrap buildout py2
        if: ${{ matrix.python-version == '2.7'}}
        run: |
          virtualenv .
          bin/pip install -r requirements.txt
      - name: bootstrap buildout py3
        if: ${{ matrix.python-version != '2.7'}}
        run: |
          python -m venv .
          bin/pip install -r requirements.txt
      - name: buildout
        run: |
          bin/buildout -t 10 -Nc test-${{ matrix.plone-version }}.x.cfg
          bin/pip install zest.pocompile
          bin/pocompile src
      - name: test
        run: |
            export DISPLAY=:99
            chromedriver --url-base=/wd/hub &
            sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
            sleep 2
            PATH=$PATH:$PWD/chromedriver ROBOT_HTTP_PORT=55001 bin/test
            cat /home/runner/work/Products.PasswordStrength/Products.PasswordStrength/parts/test/password/Test_register_form/output.xml
